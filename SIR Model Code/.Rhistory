predic(fit, newdata=data.fram(carat=newx))
predict(fit, newdata=data.fram(carat=newx))
predict(fit, newdata=data.frame(carat=newx))
newx=c(0.16,0.27,0.34)
predict(fit, newdata=data.frame(carat=newx))
fit$residuals
sum(fit$residuals)
sum(fit$residuals*diamond$carat)
?resid
fit
resid(fit)
resid(fit) - fit$residuals
resid(fit) - fit$residuals
?runif
x=runif(100,-3,3)
y=x+sin(x)+rnorm(100,sd=0.2)
plot(x,y)
lm(y~)
lm(y~x)
plot(lm(y~x))
plot(x,y)
abline(lm(y~x))
plot(x,resid(lm(y~x)))
abline(h=0)
x=runif(100,0,6)
y=x+rnorm(100,sd=0.001*x)
plot(x,y)
abline(lm(y~x))
abline(x,lm(y~x)$residuals)
plot(x,lm(y~x)$residuals)
abline(h=0)
fit
fit$sigma
fit$residuals
summary(FIT)
summary(fit)
summary(fit)$sigma
var(fit$residuals)
sqrt(var(fit$residuals))
sqrt(sum(fit$residuals^2)/(n-2))
sqrt(sum(fit$residuals^2)/(nrow(y)-2))
nrow(y)
dim(y)
(y)
length(y)
sqrt(sum(fit$residuals^2)/(length(y)-2))
sqrt(sum(fit$residuals^2))/(length(y)-2)
sqrt(sum(fit$residuals^2)/(length(y)-2))
(sum(fit$residuals^2)/(length(y)-2))
y
mean(y)
corr(x,y)
xcor(x,y)
xcorr(x,y)
example(anscombe)
fit
fit$coefficients
summary(fit)$coefficients
?qt
summary(fit)$coefficients
a=summary(fit)$coefficients
a
a[1,1]
a[1,1] + c(-1,1)*qt(0.975,df=fit$df)*a[1,2]
a[2,1] + c(-1,1)*qt(0.975,df=fit$df)*a[2,2]
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
x
y
plot(x,y)
?lm
fit=lm(y~x)
fit
fit
summary(fit)
fit$residuals
sd(fit$residuals)
summary(fit)
load(mtcars)
library(mtcars)
mtcars
x=mtcars$mpg
y=mtcars$mpg
x=mtcars$wt
fit=lm(y~x)
fit
fit$df
plot(x,y)
abline(fit)
?predic
?predict
mean(x)
predict(fit,mean(x),interval="confidence")
predict(fit,mean(x))
mean(x)
fit
ndata=data.frame(x=mean(x))
predict(fit,ndata)
predict(fit,ndata,interval="confidence")
predict(fit,ndata)
a=predict(fit,ndata)
a
summary(a)
names(summary(a))
names(a)
predict(fit,ndata)
predict(fit,ndata,interval="predict")
?mtcars
predict(fit,data.frame(x=3000),interval="confidence")
predict(fit,data.frame(x=3000/1000),interval="confidence")
x
y
mean(x)
predict(fit,data.frame(x=3),interval="confidence")
predict(fit,data.frame(x=3),interval="prediction")
predict(fit,data.frame(x=2),interval="confidence")
predict(fit,data.frame(x=2),interval="predict")
predict(fit,data.frame(x=2))
predict(fit,data.frame(x=2))
fit
x
x1=x/2
fit1=lm(y~x1)
fit1
predict(fit1,data.frame(x1=1))
predict(fit1,data.frame(x1=1),interval="confidence")
predict(fit1,data.frame(x1=1),interval="predict")
summary(fit1)$coefficients
fit1
fit1$x1
fit1$coefficients
fit1$coefficients[2]
aa=fit1$coefficients[2]
aa+c(-1,1)*qt(0.975,df=fit1$df)*aa
aa=fit1$coefficients
aa
summary(fit1)$coefficients
a=summary(fit1)$coefficients
a
a[1,1]
a[1,2]
a[2,1]
a[2,2]
a[2,1]+c(-1,1)*qt(0.975,df=fit1$df)*a[2,2]
y
x
fit=lm(y~x)
predict(fit,data.frame(x=x))
yhat=predict(fit,data.frame(x=x))
sum((y-yhat)^2)
yhat
y
(y-yhat)
sum(y-yhat)
sum((y-yhat)^2)
fit$coefficients
fit$coefficients[2]
fit$coefficients[2]*x
fit$coefficients[1]*x
fit$coefficients[2]*x
fit$coefficients[2]*x-y
sum(fit$coefficients[2]*x-y)
sum(fit$coefficients[1]*x-y)
sum(fit$coefficients[2]*x-y)
sum(fit$coefficients[1]-y)
fit$coefficients
sum(fit$coefficients[1]-y)
sum(fit$coefficients[1]-y)^2
sum(fit$coefficients[1]-y)^2
sum(y-yhat)
sum((y-yhat)^2)
nn=sum((y-yhat)^2)
dd=sum((y-fit$coefficients[1])^2)
nn/dd
dd/nn
dd
nn
mean(y)
dd = sum((y-mean(y))^2)
dd
nn
nn/dd
(3872+2576+2335+2141+2488)
(3872+2576+2335+2141+2488)/13737
(3872+2576+2335+2141+2488)/13737*100
(3872+2576+2335+2141+2488)/13737*100-100
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
summary(lm(y~x))
summary(lm(mtcars$mpg,mtcars$wt))
summary(lm(mtcars$mpg~mtcars$wt))
summary(lm(mtcars$mpg~mtcars$wt-1))
summary(lm(mtcars$mpg~mtcars$wt+as.fact(mtcars$cyl)))
summary(lm(mtcars$mpg~mtcars$wt+as.factor(mtcars$cyl)))
summary(lm(mtcars$mpg~as.factor(mtcars$am)))
summary(lm(mtcars$mpg~as.factor(mtcars$am)+wt))
summary(lm(mtcars$mpg~as.factor(mtcars$am)+mtcars$wt))
summary(lm(mtcars$mpg~as.factor(mtcars$am)*mtcars$wt))
summary(lm(mtcars$mpg~as.factor(mtcars$am)+I(mtcars$wt*0.5))
)
summary(lm(mtcars$mpg~as.factor(mtcars$am)*I(mtcars$wt*0.5))
)
plot(resid(lm(mtcars$mpg~mtcars$wt)) , resid(lm(mtcars$am~mtcars$wt)))
plot(resid(lm(mtcars$am~mtcars$wt)),resid(lm(mtcars$mpg~mtcars$wt)))
density(resid(modelFit))
modelFit = lm(mpg~am, data=mtcars)
summary(modelFit)
density(resid(modelFit))
plot(density(resid(modelFit)))
lm_am_wt = lm(mpg ~ am * wt, data=mpg)
lm_am_wt = lm(mpg ~ am * wt, data=mtcars)
plot(mtcars$wt, mtcars$mpg, pch=19)
points(mtcars$wt, mtcars$mpg, pch=19, col=((mtcars$am==1)*1+1)
)
lm_am_wt
summary(lm_am_wt)
1-0.95
abline(c(lm_am_wt$coefficients[1],lm_am_wt$coefficients[2]),col="red",lwd=3)
abline(c(lm_am_wt$coefficients[1],lm_am_wt$coefficients[2]),col="red",lwd=3)
lm_am_wt$coefficients[1]
lm_am_wt$coefficients[2]
lm_am_wt$coefficients[1]
lm_am_wt$coefficients[2]
lm_am_wt$coeff[2]
lm_am_wt$coeff[1]
?abline
abline(c(lm_am_wt$coefficients[1],lm_am_wt$coefficients[3]),col="red",lwd=3)
abline(c(lm_am_wt$coefficients[1],lm_am_wt$coefficients[2]),col="black",lwd=3)
abline(c(lm_am_wt$coefficients[1],lm_am_wt$coefficients[3]),col="black",lwd=3)
abline(c(lm_am_wt$coefficients[1]+lm_am_wt$coefficients[2],lm_am_wt$coefficients[3]+lm_am_wt$coefficients[4]),col="red",lwd=3)
names(mtcars)
lm(mtcars~.)
lm(mpg~.,data=mtcars)
mtcars$cyl
mtcars$disp
mtcars$hp
mtcars$drat
mtcars$gear
mtcars$carb
mtcars$vs
mtcars$am = as.factor(mtcars$am)
levels(mtcars$am) = c("automatic", "manual")
mtcars$cyl = as.factor(mtcars$cyl)
mtcars$gear = as.factor(mtcars$gear)
mtcars$carb = as.factor(mtcars$carb)
mtcars$vs = as.factor(mtcars$vs)
lm(mpg~.,data=mtcars)
summary(lm(mpg~.,data=mtcars))
summary(lm(mpg~am,data=mtcars))
summary(lm(mpg~am+cyl,data=mtcars))
summary(lm(mpg~am*cyl,data=mtcars))
summary(lm(mpg~am+cyl,data=mtcars))
summary(lm(mpg~am+cyl+gear,data=mtcars))
summary(lm(mpg~am+gear,data=mtcars))
names(mtcars)
summary(lm(mpg~am+cyl,data=mtcars))
summary(lm(mpg~am*cyl,data=mtcars))
summary(lm(mpg~am+cyl,data=mtcars))
summary(lm(mpg~am+gear,data=mtcars))
summary(lm(mpg~am+disp,data=mtcars))
summary(lm(mpg~am*disp,data=mtcars))
summary(lm(mpg~am*drat,data=mtcars))
summary(lm(mpg~am+drat,data=mtcars))
summary(lm(mpg~am+qsec,data=mtcars))
?mtcars
summary(lm(mpg~am*qsec,data=mtcars))
summary(lm(mpg~am+qsec,data=mtcars))
summary(lm(mpg~am+vs,data=mtcars))
summary(lm(mpg~am*vs,data=mtcars))
summary(lm(mpg~am+vs+qsec,data=mtcars))
summary(lm(mpg~am*vs*qsec,data=mtcars))
summary(lm(mpg~am+vs+qsec,data=mtcars))
summary(lm(mpg~am+qsec,data=mtcars))
summary(lm(mpg~am+carb,data=mtcars))
summary(step(lm(data=mtcars,mpg~am+cyl+wt+hp+disp+drat+qsec+vs++gear+carb),direction="backward",test="F"))
summary(step(lm(data=mtcars,mpg~am+cyl+wt+hp+disp+drat+qsec+vs+gear+carb),direction="backward",test="F"))
?step
lm1 = lm(mpg~.,data=mtcars)
step(lm1)
summary(lm(mpg~cyl+am,data=mtcars))
summary(lm(mpg~cyl*am,data=mtcars))
summary(lm(mpg~cyl*am*wt,data=mtcars))
summary(lm(mpg~cyl+am+wt,data=mtcars))
summary(lm(mpg~cyl+am+wt+hp,data=mtcars))
summary(lm(mpg~cyl+hp,data=mtcars))
summary(lm(mpg~am+hp,data=mtcars))
summary(lm(mpg~am+hp+qsec,data=mtcars))
summary(lm(mpg~am+hp,data=mtcars))
summary(lm(wt~hp,data=mtcars))
plot(wt,hp,data=mtcars)
plot(mtcars$wt,mtcars$hp)
plot(mtcars$wt,mtcars$hp,col=(mtcars$am=="manual"))
plot(mtcars$wt,mtcars$hp,col=(mtcars$am=="manual")+1)
plot(mtcars$hp,mtcars$mpg,col=(mtcars$am=="manual")+1)
lm(mpg~am+hp+wt)
lm(mpg~am+hp+wt,data=mtcars)
summary(lm(mpg~am+hp+wt,data=mtcars))
summary(lm(mpg~am+hp+wt+cyl,data=mtcars))
?anova
anova(lm(mpg~hp+am,data=mtcars),lm(mpg~wt+am,data=mtcars))
anova(lm(mpg~hp+am,data=mtcars))
anova(lm(mpg~wt+am,data=mtcars))
anova(lm(mpg~hp+am+wt,data=mtcars))
summary(lm(mpg~hp+am+wt,data=mtcars))
full = lm(mpg~.,data=mtcars)
step(am,scope=list(lower=am,upper=full),direction="forward")
?step
step(null,scope=list(lower=am,upper=full),direction="forward")
min1 = lm(mpg~am,data=mtcars)
step(min1,scope=list(lower=min1,upper=full),direction="forward")
summary(lm(formula = mpg ~ am + hp + wt + qsec, data = mtcars))
plot(predict(modelFit),resid(modelFit),pch='.')
?lm
modelFit
modelFit$residuals
modelFitAll$residuals
modelFitAll = lm(mpg ~., data=mtcars)
modelFitAll$residuals
modelFitAll$df.residual
modelFit$df.residual
summary(modelFit)$residual
summary(modelFitAll)$residual
summary(modelFitAll)$sigma
summary(modelFit)$sigma
summary(modelFit)
summary(modelFitAll)
summary(modelFitAll)$cov.unscalled
summary(modelFitAll)$cov.unscaled
anova(modelFitAll)
par(mfrow=c(2,2))
plot(modelFitAll)
plot(modelFitAll$fitted.values,modelFitAll$residuals)
abline(h(0))
?abline
abline(h=0
)
modelFit = lm(mpg~am, data=mtcars)
summary(modelFit)
4.9*2
par(mfrow=c(2,2))
mean(mtcars$mpg[mtcars$am=="manual"])
mean(mtcars$mpg[mtcars$am=="manual"]) - mean(mtcars$mpg[mtcars$am=="automatic"])
plot(modelFit)
plot(as.factor(modelFitAll$fitted.values),modelFitAll$residuals)
plot(modelFitAll$fitted.values,modelFitAll$residuals)
plot(modelFit$fitted.values,modelFit$residuals)
plot(as.factor(modelFit$fitted.values),modelFit$residuals)
plot(modelFit)
summary(modelFit)$S
summary(modelFit)$Sigma
summary(modelFit)$sigma
plot(as.factor(modelFit$fitted.values), modelFit$residuals)
plot(as.factor(modelFit$fitted.values, lablels = c("automatic", "manual")), modelFit$residuals)
plot(as.factor(modelFit$fitted.values, labels = c("automatic", "manual")), modelFit$residuals)
factor(modelFit$fitted.values, labels = c('automatic', 'manual'))
plot(factor(modelFit$fitted.values, labels = c('automatic', 'manual')), modelFit$residuals)
cor(as.numeric(mtcars$am), mtcars$mpg)
step(modelFit,scope=list(lower=modelFit,upper=modelFitAll),direction="forward")
a=step(modelFit,scope=list(lower=modelFit,upper=modelFitAll),direction="forward")
summary(a)
plot(a)
par(mfrow=c(2,2))
plot(a)
plot(a$fitted.values, a$residuals)
abline(h=0,col="red")
a
summary(a)
summary(modelFit)
mtcars$qsec
mean(mtcars$mpg[mtcars$am=="manual"])
mean(mtcars$mpg[mtcars$am=="automatic"])
\end{document}
modelFitAll = lm(mpg ~., data=mtcars)
summary(modelFitAll)$sigma
modelNew = step(modelFit,scope=list(lower=modelFit,upper=modelFitAll),direction="forward")
modelNew
mean(mtcars$mpg[mtcars$am=="manual"]) - mean(mtcars$mpg[mtcars$am=="automatic"])
modelNew = step(modelFit,scope=list(lower=modelFit,upper=modelFitAll),direction="forward")
summary(modelNew)
densitiy(modelNew$residuals)
density(modelNew$residuals)
plot(densitiy(modelNew$residuals))
plot(density(modelNew$residuals))
summary(modelNew)
a=summary(modelNew)
a
names(a)
a$coefficients
a$adj.r.squared
a$sigma
summary(modelNew)
plot(modelNew$fitted.values, modelFit$residuals)
plot(modelFitAll$fitted.values, modelFitAll$residuals)
abline(h=0)
summary(lm(mpg~am+hp))
summary(lm(mpg~am+hp,data=mtcars))
summary(lm(mpg~am+hp+wt,data=mtcars))
summary(lm(mpg~am+hp+wt+qsec,data=mtcars))
summary(lm(mpg~am+hp+qsec,data=mtcars))
summary(lm(mpg~am+hp+wt+qsec,data=mtcars))
summary(lm(mpg~am+wt,data=mtcars))
summary(lm(mpg~am+hp,data=mtcars))
a=(lm(mpg~am+hp,data=mtcars))
plot(a$fitted.values,a$residuals)
abline(h=0)
corr(mtcars$hp,mtcars$am)
cor(mtcars$hp,mtcars$am)
cor(mtcars$hp,as.numeric(mtcars$am))
names(mtcars)
summary(lm(mpg~am+hp+disp,data=mtcars))
summary(lm(mpg~am+hp+drat,data=mtcars))
summary(lm(mpg~am+hp+vs,data=mtcars))
summary(lm(mpg~am+hp+gear,data=mtcars))
summary(lm(mpg~am+hp,data=mtcars))
summary(lm(mpg~am+hp+carb,data=mtcars))
modelNew = lm(mpg ~am + hp, data=mtcars)
summary(modelNew)
modelNew = lm(mpg ~am * hp, data=mtcars)
summary( lm(mpg ~am * hp, data=mtcars))
a= lm(mpg ~am * hp, data=mtcars)
plot(a$fitted.values,a$residuals)
a= lm(mpg ~am + hp, data=mtcars)
plot(a$fitted.values,a$residuals)
a= lm(mpg ~am + hp +wt+qsec, data=mtcars)
plot(a$fitted.values,a$residuals)
abline(h=0)
plot(modelNew$fitted.values, modelNew$residuals)
abline(h=0,col='red')
plot(density(modelNew$residuals))
plot(density(a$residuals))
plot(density(modelNew$residuals))
plot(density(a$residuals))
plot(mtcars$hp, mtcars$mpg)
plot(mtcars$hp, mtcars$mpg, col=((mtcars$car=="manual")*1+1))
plot(mtcars$hp, mtcars$mpg, col=((mtcars$am=="manual")*1+1))
modelNew$coefficients
modelNew = lm(mpg ~am + hp, data=mtcars)
modelNew$coefficients
((mtcars$am=="manual")*1+1)
plot(mtcars$hp, mtcars$mpg, col=2
)
plot(mtcars$hp, mtcars$mpg, col=1)
abline(modelNew$coefficients[1],modelNew$coefficients[3],col="black",lwd)
abline(modelNew$coefficients[1],modelNew$coefficients[3],col="black",lwd=3)
abline(modelNew$coefficients[1]+modelNew$coefficients[2],modelNew$coefficients[3],col="red",lwd=3)
abline(modelNew$coefficients[1],modelNew$coefficients[3],col="black",lwd=3)
plot(mtcars$hp, mtcars$mpg, col=((mtcars$am=="manual")*1+1))
abline(modelNew$coefficients[1],modelNew$coefficients[3],col="black",lwd=3)
abline(modelNew$coefficients[1]+modelNew$coefficients[2],modelNew$coefficients[3],col="red",lwd=3)
library(twitteR)
install.packages(twitteR)
install.packages(twitter)
install.packages("twitteR")
library(twitteR)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
trellis.par.set()
? trellis.par.set()
library(datasets)
data(airquality)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
0.1*10
0.11*10
0.11*100
0.1*100
0.01*100
0.09*100
0.19*100
(0.19*100)%10
(0.19*100)//10
(0.19*100)%%10
(0.193*100)%%10
setwd("~/cs224w/EbolaProject/SIR Model Code")
data =  read.csv("country_timeseries.csv")
data$Cases_Liberia
data$Cases_Liberia+data$Cases_Guinea+data$Cases_SierraLeone
plot(data$Day,data$Cases_Liberia+data$Cases_Guinea+data$Cases_SierraLeone)
plot(data$Date,data$Cases_Liberia+data$Cases_Guinea+data$Cases_SierraLeone)
data$Day
dataT = data.frame(data$Day, data$Date, data$Cases_Liberia+data$Cases_Guinea+data$Cases_SierraLeone)
dataT
data$Deaths_Guinea+data$Deaths_Liberia+data$Deaths_SierraLeone
data =  read.csv("country_timeseries.csv")
dataT = data.frame(data$Day, data$Date, data$Cases_Liberia+data$Cases_Guinea+data$Cases_SierraLeone, data$Deaths_Guinea+data$Deaths_Liberia+data$Deaths_SierraLeone)
names(dataT) = c("day", "date", "infected", "death")
dataT
dataT$date = as.Date(dataT$date, format="%m/%d/%Y")
data =  read.csv("country_timeseries.csv")
dataT = data.frame(data$Day, data$Date, data$Cases_Liberia+data$Cases_Guinea+data$Cases_SierraLeone, data$Deaths_Guinea+data$Deaths_Liberia+data$Deaths_SierraLeone)
names(dataT) = c("day", "date", "infected", "death")
dataT$date = as.Date(dataT$date, format="%m/%d/%Y")
dataT = dataT[order(dataT$date),]
dataT
library(R.matlab)
writeMat("dataTotal.mat", day=dataT$day, death = dataT$death, infected = dataT$infected, date = dataT$date)
